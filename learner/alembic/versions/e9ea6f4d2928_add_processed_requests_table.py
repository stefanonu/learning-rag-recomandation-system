"""add processed_requests table

Revision ID: e9ea6f4d2928
Revises: f819405f809a
Create Date: 2025-05-29 12:32:30.602093

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = 'e9ea6f4d2928'
down_revision: Union[str, None] = 'f819405f809a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('query_logs')
    op.drop_index(op.f('ix_processed_requests_id'), table_name='processed_requests')
    op.drop_table('processed_requests')
    op.drop_table('documents')
    op.drop_table('chunks')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chunks',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('document_id', sa.VARCHAR(), nullable=False),
    sa.Column('chunk_index', sa.INTEGER(), nullable=False),
    sa.Column('text', sa.VARCHAR(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('documents',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('filename', sa.VARCHAR(), nullable=False),
    sa.Column('course_id', sa.VARCHAR(), nullable=False),
    sa.Column('upload_time', sa.DATETIME(), nullable=True),
    sa.Column('num_chunks', sa.INTEGER(), nullable=True),
    sa.Column('filepath', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('processed_requests',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('request_id', sa.VARCHAR(), nullable=False),
    sa.Column('payload', sqlite.JSON(), nullable=False),
    sa.Column('worker_id', sa.INTEGER(), nullable=False),
    sa.Column('result', sa.VARCHAR(), nullable=True),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('request_id')
    )
    op.create_index(op.f('ix_processed_requests_id'), 'processed_requests', ['id'], unique=False)
    op.create_table('query_logs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('question', sa.VARCHAR(), nullable=False),
    sa.Column('answer', sa.VARCHAR(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
